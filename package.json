{
	"name": "intouch-language",
	"displayName": "Intouch-Language and Formatter for VSCode. (c)2021-2022 vitalyruhl",
	"description": "Intouch-Language syntax highlighting, formatter and code snippets for VSCode",
	"version": "1.4.1",
	"icon": "images/logo.png",
	"publisher": "Vitaly-ruhl",
	"engines": {
		"vscode": "^1.104.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/vitalyruhl/intouch-language.git"
	},
	"bugs": {
		"url": "https://github.com/vitalyruhl/intouch-language/issues"
	},
	"license": "GNU",
	"galleryBanner": {
		"color": "#030404",
		"theme": "dark"
	},
	"categories": [
		"Programming Languages",
		"Formatters",
		"Snippets",
		"Themes"
	],
	"keywords": [
		"Intouch",
		"Invensys",
		"Wonderware",
		"Aveva",
		"formatter",
		"theme",
		"dark"
	],
	"main": "./out/extension",
	"activationEvents": [
		"onLanguage:intouch"
	],
	"contributes": {
		"themes": [
			{
				"label": "Intouch Dark",
				"uiTheme": "vs-dark",
				"path": "./themes/dark.json"
			}
		],
		"languages": [
			{
				"id": "intouch",
				"aliases": [
					"Intouch",
					"intouch"
				],
				"extensions": [
					".vbi",
					".vi"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "intouch",
				"scopeName": "source.vbi",
				"path": "./syntaxes/intouch.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "intouch",
				"path": "./snippets/vbi.json"
			}
		],
		"commands": [
			{
				"command": "vbi-format",
				"title": "Format Intouch file",
				"category": "vbi"
			}
		],
		"keybindings": [
			{
				"command": "vbi-format",
				"key": "Ctrl+Shift+Alt+I"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Intouch-Language",
			"properties": {
				"VBI.formatter.EmptyLine.allowedNumberOfEmptyLines": {
					"type": "number",
					"default": 1,
					"minimum": 0,
					"maximum": 100,
					"markdownDescription": "Number of allowed consecutive empty lines (0-100)."
				},
				"VBI.formatter.EmptyLine.RemoveEmptyLines": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Delete empty lines."
				},
				"VBI.formatter.EmptyLine.EmptyLinesAlsoInComment": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Delete empty lines in comments also."
				},
				"VBI.formatter.FormatAlsoInComment": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Allow format in comments."
				},
				"VBI.formatter.BC.BlockCodeBegin": {
					"type": "string",
					"default": "{>",
					"minLength": 2,
					"maxLength": 10,
					"markdownDescription": "Begin Codeblock."
				},
				"VBI.formatter.BC.BlockCodeEnd": {
					"type": "string",
					"default": "{<",
					"markdownDescription": "End Codeblock."
				},
				"VBI.formatter.BC.BlockCodeExclude": {
					"type": "string",
					"default": "{#",
					"markdownDescription": "Turn this comment line back (exclude from Nesting)."
				},
				"VBI.formatter.Region.BlockCodeBegin": {
					"type": "string",
					"default": "{region",
					"minLength": 2,
					"maxLength": 10,
					"markdownDescription": "Begin Codeblock."
				},
				"VBI.formatter.Region.BlockCodeEnd": {
					"type": "string",
					"default": "{endregion",
					"markdownDescription": "End Codeblock."
				},
				"VBI.formatter.Region.BlockCodeExclude": {
					"type": "string",
					"default": "{#",
					"markdownDescription": "Turn this comment line back (exclude from Nesting)."
				}
			}
		}
	},
	"scripts": {
		"start": "nodemon --watch src src/index.js",
		"build:theme": "node src/index.js",
		"vscode:prepublish": "npm run compile && npm run build:theme",
		"postinstall": "npm run compile",
		"compile": "tsc -p ./",
		"test": "npm run compile && node ./out/test/runTest.js",
		"update:fixtures": "npm run compile && node ./scripts/update-fixtures.js",
		"watch": "tsc -watch -p ./",
		"lint": "eslint . --ext .ts,.tsx",
		"publish-patch": "npm run compile && npm run build:theme && vsce package && vsce publish patch",
		"publish-minor": "npm run compile && npm run build:theme && vsce package && vsce publish minor",
		"publish-major": "npm run compile && npm run build:theme && vsce package && vsce publish major",
		"publish": "npm run compile && npm run build:theme && vsce package && vsce publish",
		"clean:all": "rimraf ./out ./node_modules ./package-lock.json",
		"clear:all": "npm run clean:all",
		"clear:out": "rimraf ./out",
		"refresh": "npm run clean:all && npm install && npm run compile && npm run build:theme"
	},
	"capabilities": {
		"virtualWorkspaces": true,
		"untrustedWorkspaces": {
			"supported": "limited",
			"description": "%ext.capabilities.untrustedWorkspaces.description%"
		}
	},
	"devDependencies": {
		"@types/glob": "^9.0.0",
		"@types/mocha": "^10.0.10",
		"@types/node": "^24.5.2",
		"@types/vscode": "^1.104.0",
		"@typescript-eslint/eslint-plugin": "^8.44.1",
		"@typescript-eslint/parser": "^8.44.1",
		"@vscode/test-electron": "^2.5.2",
		"color": "^5.0.2",
		"cross-env": "^10.0.0",
		"eslint": "^9.36.0",
		"glob": "^11.0.3",
		"mocha": "^11.7.2",
		"nodemon": "^3.1.10",
		"rimraf": "^6.0.1",
		"source-map-support": "^0.5.21",
		"typescript": "^5.9.2"
	},
	"__metadata": {
		"id": "834eb420-2978-4100-b7de-2430fc88e429",
		"publisherDisplayName": "Vitaly Ruhl",
		"publisherId": "448eaf8e-6bd4-4b72-b6cd-9af578a789d2"
	}
}
